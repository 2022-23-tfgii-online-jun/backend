on:
  push:
    branches:
      - main

name: deploy

jobs:
  build-and-push:
    name: Build and push image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_TLS: ${{ secrets.DB_TLS }}
          SENTRY_KEY: ${{ secrets.SENTRY_KEY }}
          GIN_MODE: ${{ secrets.GIN_MODE }}
          APP_ENV: ${{ secrets.APP_ENV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          JWT_TOKEN_KEY: ${{ secrets.JWT_TOKEN_KEY }}
          JWT_TOKEN_EXPIRED: ${{ secrets.JWT_TOKEN_EXPIRED }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_FOLDER_NAME: ${{ secrets.AWS_FOLDER_NAME }}
          AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          FORECAST_KEY: ${{ secrets.FORECAST_KEY }}
          FORECAST_API: ${{ secrets.FORECAST_API }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: fabdelgado/api-backend-emur:latest

  deploy-to-server:
    name: Deploy to server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Executing connection to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd deployment/backend
            docker-compose down
            docker system prune --all --force
            docker-compose up -d